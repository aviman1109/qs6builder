Jui.$define("Jui.graph.Workflow",Jui.basic.Control);
Jui.graph.Workflow.getHtml=function(j,a,f){j=j||{};
var g=Jui.cast.toBool(j.isDesignMode,false);
var e=g?"Jui.Workflow.LegendTitleDesign":"Jui.Workflow.LegendTitleDisplay";
var d=g?["Select","Line","Start","End","Manual","Auto"]:["NotStarted","Running","Finished"];
var h=Jui.i18n.getText(e);
var b=[];
b.push("<div class=JuiWorkflow"+Jui.$p({id:a,style:j.style,design:g}));
b.push(" unselectable=on onselectstart='return false' tabindex=0>");
b.push("<div class=JuiWorkflowLegend>");
b.push("<div class=JuiWorkflowLegendHead>"+Jui.$h(h)+"</div>");
b.push("<div class=JuiWorkflowLegendBody>");
b.push("<table class=JuiWorkflowLegendTable>");
for(var c=0;
c<d.length;
++c){var k=d[c];
b.push("<tr _type="+k+" onclick=Jui.graph.Workflow.doLegendItemClick()>");
b.push("<td class=JuiWorkflowLegendIconCell>");
b.push("<div class=JuiWorkflowLegend"+k+"Icon></div>");
b.push("</td>");
b.push("<td class=JuiWorkflowLegendTextCell>");
b.push(Jui.$h(Jui.i18n.getText("Jui.Workflow.LegendItem"+k)));
b.push("</td>");
b.push("</tr>");
}b.push("</table>");
b.push("</div>");
b.push("</div>");
b.push("<div class=JuiWorkflowContent>");
b.push("<canvas class=JuiWorkflowGridCanvas></canvas>");
b.push("<canvas class=JuiWorkflowLineCanvas></canvas>");
b.push("<canvas class=JuiWorkflowTempCanvas></canvas>");
b.push("<div class=JuiWorkflowNodePanel></div>");
b.push("<div class=JuiWorkflowMask></div>");
b.push("<div class=JuiWorkflowNodeDraggingShadow></div>");
b.push("</div>");
b.push("</div>");
return b.join("");
};
Jui.graph.Workflow.initialize=function(c,b,a){b=b||{};
a=a||this;
var d=this.superClass.initialize(c,b,a);
b=b||{};
d._isDesignMode=Jui.cast.toBool(b.isDesignMode,false);
d._gridVisible=Jui.cast.toBool(b.gridVisible,true);
d._legend=c.children[0];
d._content=c.children[1];
d._legendTable=d._legend.lastChild.firstChild;
d._cursorLegendItem=d._legendTable.rows[0];
d._gridCanvas=d._content.children[0];
d._lineCanvas=d._content.children[1];
d._tempCanvas=d._content.children[2];
d._nodePanel=d._content.children[3];
d._mask=d._content.children[4];
d._nodeDraggingShadow=d._content.children[5];
d._mask.onclick=a.doMaskClick;
d._mask.onmousemove=a.doMaskMouseMove;
d.ondoubleclick=b.ondoubleclick;
d.onnodeadd=b.onnodeadd;
d.onnodedelete=b.onnodedelete;
d.onnodemove=b.onnodemove;
d.onnodedoubleclick=b.onnodedoubleclick;
d.onlineadd=b.onlineadd;
d.onlinedelete=b.onlinedelete;
d.onlinemove=b.onlinemove;
d.onlinedoubleclick=b.onlinedoubleclick;
c.onkeydown=a.doKeyDown;
d._lineCanvas.onclick=d._isDesignMode?a.doLineCanvasClick:null;
d._lineCanvas.ondblclick=a.doLineCanvasDoubleClick;
d._nodes=[];
d._nodeMap={};
d._pointNodeMap={};
d._lines=[];
d._lineMap={};
d._nodeLineMap={};
d._currentLegendItem=null;
d._setCurrentLegendItem();
Jui.event.attach(window,"resize",function(){d._resize();
});
return d;
};
Jui.graph.Workflow.prototype.clear=function(a){this.load({nodes:[],lines:[]});
};
Jui.graph.Workflow.prototype.load=function(a){var b=this;
b._currentNode=null;
b._currentLine=null;
b._setNodes(Jui.util.clone(a.nodes)||[]);
b._setLines(Jui.util.clone(a.lines)||[]);
b._refreshGrid();
};
Jui.graph.Workflow.prototype.getJson=function(){var b=[];
for(var c=0;
c<this._nodes.length;
++c){b.push(this._getNodeJson(this._nodes[c]));
}var a=[];
for(var c=0;
c<this._lines.length;
++c){a.push(this._getLineJson(this._lines[c]));
}return{nodes:b,lines:a};
};
Jui.graph.Workflow.prototype.updateNode=function(f,c){var e=this;
var d=e._nodeMap[f];
if("text" in c&&c.text!=d.text){d.text=c.text;
Jui.dom.setInnerText(d.textElement,c.text);
this._refreshNodePosition(d);
}if("code" in c&&c.code!=d.code){delete e._nodeMap[f];
d.code=c.code;
d.element._code=c.code;
e._nodeMap[c.code]=d;
for(var b=0;
b<e._lines.length;
++b){var a=e._lines[b];
if(a.from==f||a.to==f){delete e._nodeLineMap[[a.from,a.to]];
a.from=a.from==f?c.code:a.from;
a.to=a.to==f?c.code:a.to;
e._nodeLineMap[[a.from,a.to]]=a;
e.fireEvent("onlinemove",{line:e._getLineJson(a)});
}}}};
Jui.graph.Workflow.prototype.updateLine=function(d,b){var c=this;
var a=c._lineMap[d];
if("text" in b&&b.text!=a.text){a.text=b.text;
Jui.dom.setInnerText(a.textElement,b.text);
c._refreshLintTextPosition(a);
}if("isDefault" in b&&b.isDefault!=a.isDefault){a.isDefault=b.isDefault!=false;
c._refreshLines();
}};
Jui.graph.Workflow.doKeyDown=function(){if(event.keyCode==27){Jui.$owner()._setCurrentLegendItem();
}else{if(event.keyCode==46){Jui.$owner()._deleteCurrentElement();
}}};
Jui.graph.Workflow.doNodeDoubleClick=function(){var b=Jui.$owner();
var a=b._nodeMap[this._code];
b.fireEvent("onnodedoubleclick",{node:b._getNodeJson(a)});
};
Jui.graph.Workflow.doNodeMouseDown=function(){var b=Jui.dom.getAncestorByClassName("JuiWorkflowNode");
var a=Jui.$owner(b);
if(a._isDesignMode){a._setCurrentNode(a._nodeMap[b._code]);
a._setCurrentLine(null);
}};
Jui.graph.Workflow.doNodeTextMouseDown=function(){var c=Jui.dom.getAncestorByClassName("JuiWorkflowNodeText");
var b=Jui.$owner(c);
if(b._isDesignMode){var a=c.previousSibling._code;
b._setCurrentNode(b._nodeMap[a]);
b._setCurrentLine(null);
}};
Jui.graph.Workflow.doLineTextMouseDown=function(){var b=Jui.dom.getAncestorByClassName("JuiWorkflowLineText");
var a=Jui.$owner(b);
if(a._isDesignMode){a._setCurrentNode(null);
a._setCurrentLine(a._lineMap[b._code]);
}};
Jui.graph.Workflow.doLineTextDoubleClick=function(){var c=Jui.dom.getAncestorByClassName("JuiWorkflowLineText");
var b=Jui.$owner(c);
var a=b._lineMap[c._code];
b.fireEvent("onlinedoubleclick",{line:b._getLineJson(a)});
};
Jui.graph.Workflow.doNodeDragStart=function(){var c=Jui.$owner();
if(c._isDesignMode){var b=Jui.dom.getAncestorByClassName("JuiWorkflowNode");
var a=c._nodeMap[b._code];
c._draggingNode=a;
c._content.ondragover=Jui.graph.Workflow.doNodeDragOver;
event.dataTransfer.effectAllowed="move";
if(event.dataTransfer.setDragImage){event.dataTransfer.setData("custom","jui-workflow-node");
}}};
Jui.graph.Workflow.doNodeDragEnd=function(){var a=Jui.$owner();
a._content.ondragover=null;
};
Jui.graph.Workflow.doNodeDragOver=function(){var f=Jui.$owner();
var a=f._toCanvasPoint(event.clientX,event.clientY,true);
Jui.event.preventDefault();
if(!Jui.math.pointsEqual(a,f._draggingNode)){var e=false;
for(var c=0;
c<f._nodes.length;
++c){if(Jui.math.pointsEqual(a,f._nodes[c])){e=true;
}}event.dataTransfer.dropEffect=e?"none":"move";
if(!e){var d=f._draggingNode;
delete f._pointNodeMap[[d.x,d.y]];
d.x=a.x;
d.y=a.y;
f._pointNodeMap[[d.x,d.y]]=d;
f._refreshNodePosition(d);
for(var c=0;
c<f._lines.length;
++c){var b=f._lines[c];
if(b.from==d.code||b.to==d.code){f._caculateLinePoints(b,b.routes);
}}f._refreshLines();
f.fireEvent("onnodemove",{node:f._getNodeJson(d)});
}}};
Jui.graph.Workflow.doLineDragStart=function(){var a=Jui.$owner();
if(a._isDesignMode){a._lineDraggerIndex=this._index;
a._content.ondragover=Jui.graph.Workflow.doLineDragOver;
a._content.ondrop=Jui.graph.Workflow.doLineDrop;
event.dataTransfer.effectAllowed="move";
if(event.dataTransfer.setDragImage){event.dataTransfer.setData("custom","jui-workflow-line");
}a._showTempCanvas();
}};
Jui.graph.Workflow.doLineDragEnd=function(){var a=Jui.$owner();
a._content.ondragover=null;
a._content.ondrop=null;
delete a._lineDraggerPoint;
a._hideTempCanvas();
a._refreshLines();
};
Jui.graph.Workflow.doLineDragOver=function(){Jui.event.preventDefault();
var g=Jui.$owner();
var b=g._currentLine;
var a=g._toCanvasPoint(event.clientX,event.clientY);
var f=g._pointNodeMap[g._toCanvasPoint(event.clientX,event.clientY,true)];
var h=null;
var c=true;
if(g._lineDraggerIndex==0){var d=f!=null&&g._nodeLineMap[[f.code,b.to]]!=null;
c=f!=null&&f.type!="End"&&!d;
h=[a,b.points[1]];
}else{if(g._lineDraggerIndex==b.points.length*2-2){var d=f!=null&&g._nodeLineMap[[b.from,f.code]]!=null;
c=f!=null&&f.type!="Start"&&!d;
h=[b.points[b.points.length-2],a];
}else{if(g._lineDraggerIndex%2==0){var e=g._lineDraggerIndex>>1;
h=[b.points[e-1],a,b.points[e+1]];
}else{var e=g._lineDraggerIndex>>1;
h=[b.points[e],a,b.points[e+1]];
}}}event.dataTransfer.dropEffect=c?"move":"none";
if(!Jui.math.pointsEqual(a,g._lineDraggerPoint)){g._drawTempLine(h,true);
g._lineDraggerPoint=a;
}};
Jui.graph.Workflow.doLineDrop=function(){var e=Jui.$owner();
var b=e._currentLine;
var a=e._toCanvasPoint(event.clientX,event.clientY);
var d=e._pointNodeMap[e._toCanvasPoint(event.clientX,event.clientY,true)];
if(e._lineDraggerIndex==0){var c=d!=null&&e._nodeLineMap[[d.code,b.to]]!=null;
if(d!=null&&d.type!="End"&&!c){delete e._nodeLineMap[[b.from,b.to]];
b.from=d.code;
e._nodeLineMap[[b.from,b.to]]=b;
e._caculateLinePoints(b,b.routes);
e.fireEvent("onlinemove",{line:e._getLineJson(b)});
}}else{if(e._lineDraggerIndex==b.points.length*2-2){var c=d!=null&&e._nodeLineMap[[b.from,d.code]]!=null;
if(d!=null&&d.type!="Start"&&!c){delete e._nodeLineMap[[b.from,b.to]];
b.to=d.code;
e._nodeLineMap[[b.from,b.to]]=b;
e._caculateLinePoints(b,b.routes);
e.fireEvent("onlinemove",{line:e._getLineJson(b)});
}}else{if(e._lineDraggerIndex%2==0){b.routes[(e._lineDraggerIndex>>1)-1]=a;
e._caculateLinePoints(b,b.routes);
e.fireEvent("onlinemove",{line:e._getLineJson(b)});
}else{Jui.array.insert(b.routes,e._lineDraggerIndex>>1,a);
e._caculateLinePoints(b,b.routes);
e.fireEvent("onlinemove",{line:e._getLineJson(b)});
}}}};
Jui.graph.Workflow.doLineDraggerDoubleClick=function(){var a=Jui.$owner();
if(a._currentLine!=null){a.fireEvent("onlinedoubleclick",{line:a._getLineJson(a._currentLine)});
}};
Jui.graph.Workflow.doLegendItemClick=function(){var b=Jui.$owner();
var a=Jui.dom.getAncestorByTagName("TR");
b._newLineFromNode=null;
b._setCurrentLegendItem(a);
b._setCurrentNode(null);
b._setCurrentLine(null);
};
Jui.graph.Workflow.doLineCanvasClick=function(){var g=Jui.$owner();
var l=null;
var a=9999;
var b=8;
var h=g._toCanvasPoint(event.clientX,event.clientY);
for(var e=0;
e<g._lines.length;
++e){for(var c=1,k=g._lines[e].points;
c<k.length;
++c){var f=Jui.math.getPointLineSegmentDistance(h,k[c-1],k[c]);
if(f<b&&f<a){a=f;
l=g._lines[e];
}}}g._setCurrentNode(null);
g._setCurrentLine(l);
};
Jui.graph.Workflow.doLineCanvasDoubleClick=function(){var a=Jui.$owner();
if(event.srcElement==a._lineCanvas){if(a._currentLine==null){a.fireEvent("ondoubleclick");
}else{a.fireEvent("onlinedoubleclick",{line:a._getLineJson(a._currentLine)});
}}};
Jui.graph.Workflow.doMaskClick=function(){if(this.style.cursor!="copy"){return;
}var e=Jui.$owner();
var g=e._currentLegendItem;
var f=g.getAttribute("_type");
var h=e._toCanvasPoint(event.clientX,event.clientY,true);
if(f=="Start"||f=="End"||f=="Manual"||f=="Auto"){e._hideMask();
e._setCurrentLegendItem();
var b=Jui.graph.Workflow._generateNextCode(e._nodeMap,"NODE-");
var i=Jui.graph.Workflow._generateNextText(e._nodes,g.cells[1].innerText);
var d={code:b,text:i,type:f,x:h.x,y:h.y};
Jui.dom.insertHtml(e._nodePanel,"BeforeEnd",e._getNodeHtml(d));
e._initializeNode(d,e._nodePanel.lastChild.previousSibling);
e.fireEvent("onnodeadd",{node:e._getNodeJson(d)});
}else{if(f=="Line"){var d=e._pointNodeMap[h];
var a=e._tempCanvas.style.display!="block";
if(a){e._newLineFromNode=d;
e._mask.style.cursor="not-allowed";
e._showTempCanvas();
}else{e._hideMask();
e._setCurrentLegendItem();
var j={code:Jui.graph.Workflow._generateNextCode(e._lineMap,"LINE-"),type:f,from:e._newLineFromNode.code,to:d.code};
var c=Jui.dom.insertHtml(e._nodePanel,"BeforeEnd",e._getLineHtml(j));
e._initializeLine(j,c);
e._refreshLines();
e.fireEvent("onlineadd",{line:e._getLineJson(j)});
}}}};
Jui.graph.Workflow.doMaskMouseMove=function(){var d=Jui.$owner();
var b=d._pointNodeMap[d._toCanvasPoint(event.clientX,event.clientY,true)];
var i=d._currentLegendItem;
var e=i.getAttribute("_type");
if(e=="Start"||e=="End"||e=="Auto"||e=="Manual"){d._mask.style.cursor=b==null?"copy":"not-allowed";
}else{if(e=="Line"){var j=d._toCanvasPoint(event.clientX,event.clientY);
var a=d._newLineFromNode==null;
var g=a?b:d._newLineFromNode;
var h=a?null:b;
var c;
if(a){c=g!=null&&g.type!="End";
}else{var f=h!=null&&d._nodeLineMap[[g.code,h.code]]!=null;
c=g!=null&&h!=null&&g!=h&&h.type!="Start"&&!f;
}d._mask.style.cursor=c?"copy":"not-allowed";
if(!a){var k={from:g.code,to:null,points:[d._getNodeCenterPoint(g),j]};
d._refreshLineEndPoints(k);
d._drawTempLine(k.points);
}}}};
Jui.graph.Workflow._generateNextCode=function(d,c){for(var a=1;
;
++a){var b=c+a;
if(d[b]==null){return b;
}}};
Jui.graph.Workflow._generateNextText=function(a,c){var e=Jui.array.toSet(a,"text");
for(var b=1;
;
++b){var d=c+b;
if(e[d]==null){return d;
}}};
Jui.graph.Workflow.prototype._resize=function(){this._refreshGrid();
this._refreshLines();
};
Jui.graph.Workflow.prototype._toCanvasPoint=function(g,e,d){var c=this._content.getBoundingClientRect();
var a=g-c.left+this._content.scrollLeft;
var f=e-c.top+this._content.scrollTop;
if(d){var b=Jui.theme["Workflow.GridSize"];
a=Math.floor(a/b);
f=Math.floor(f/b);
}return new Jui.graph.Workflow.Point(a,f);
};
Jui.graph.Workflow.prototype._getNodeCenterPoint=function(c){var b=Jui.theme["Workflow.GridSize"];
var a=b>>1;
return new Jui.graph.Workflow.Point(c.x*b+a,c.y*b+a);
};
Jui.graph.Workflow.prototype._getCanvasSize=function(b,p){var o={width:0,height:0};
for(var g=0;
g<b.length;
++g){var k=b[g].element;
var n=b[g].textElement;
o.width=Math.max(o.width,k.offsetLeft+k.offsetWidth+6,n.offsetLeft+n.offsetWidth+6);
o.height=Math.max(o.height,n.offsetTop+n.offsetHeight);
}for(var g=0;
g<p.length;
++g){for(var f=0,m=p[g].routes||[];
f<m.length;
++f){o.width=Math.max(o.width,m[f].x+6);
o.height=Math.max(o.height,m[f].y+6);
}}var d=this._content.offsetWidth;
var a=this._content.offsetHeight;
var c=Jui.browser.getScrollBarWidth();
var h=o.width>d||o.width>d-c&&o.height>a;
var l=o.height>a||o.height>a-c&&o.width>d;
o.width=Math.max(o.width,l?d-c:d);
o.height=Math.max(o.height,h?a-c:a);
return o;
};
Jui.graph.Workflow.prototype._refreshGrid=function(){if(!this._gridVisible){return;
}var c=this._gridCanvas;
var e=this._getCanvasSize(this._nodes,this._lines);
this._setCanvasSize(c,e.width,e.height);
var d=c.getContext("2d");
d.clearRect(0,0,c.width,c.height);
d.strokeStyle=Jui.theme["Workflow.GridColor"];
var b=Jui.theme["Workflow.GridSize"];
for(var a=b-0.5;
a<c.width;
a+=b){d.beginPath();
d.moveTo(a,0);
d.lineTo(a,c.height);
d.stroke();
d.closePath();
}for(var f=b-0.5;
f<c.height;
f+=b){d.beginPath();
d.moveTo(0,f);
d.lineTo(c.width,f);
d.stroke();
d.closePath();
}};
Jui.graph.Workflow.prototype._setNodes=function(c){var e=this;
c=c||[];
var a=[];
for(var d=0;
d<c.length;
++d){a.push(e._getNodeHtml(c[d]));
}e._nodePanel.innerHTML=a.join("");
e._nodes=[];
e._nodeMap={};
e._pointNodeMap={};
for(var d=0,b=e._nodePanel.children;
d<c.length;
++d){e._initializeNode(c[d],b[d*2]);
}};
Jui.graph.Workflow.prototype._getNodeHtml=function(b){var c=!this._isDesignMode&&b.status!=null;
var a="JuiWorkflowNode"+(c?" JuiWorkflow"+b.status+"Node":"");
return"<div draggable="+this._isDesignMode+" class='"+a+"'><div class=JuiWorkflow"+b.type+"NodeInner></div></div><div class=JuiWorkflowNodeText>"+Jui.$h(b.text)+"</div>";
};
Jui.graph.Workflow.prototype._initializeNode=function(c,d){if(c.code==null){c.code=Jui.graph.Workflow._generateNextCode(this._nodeMap,"NODE-");
}var a=new Jui.graph.Workflow.Point(c.x,c.y);
this._nodes.push(c);
this._nodeMap[c.code]=c;
this._pointNodeMap[a]=c;
d._code=c.code;
d.ondblclick=Jui.graph.Workflow.doNodeDoubleClick;
d.onmousedown=Jui.graph.Workflow.doNodeMouseDown;
d.ondragstart=Jui.graph.Workflow.doNodeDragStart;
d.ondragend=Jui.graph.Workflow.doNodeDragEnd;
var b=d.nextSibling;
b._code=c.code;
b.ondblclick=Jui.graph.Workflow.doNodeDoubleClick;
b.onmousedown=Jui.graph.Workflow.doNodeTextMouseDown;
c.element=d;
c.textElement=b;
this._refreshNodePosition(c);
};
Jui.graph.Workflow.prototype._refreshNodePosition=function(d){if(typeof(d.x)!="number"||typeof(d.y)!="number"){Jui.util.alertAndThrow("x or y attribute not specified for node '"+(d.text||d.code)+"'");
}var c=d.element;
var b=d.textElement;
var a=Jui.theme["Workflow.GridSize"];
c.style.left=d.x*a+"px";
c.style.top=d.y*a+"px";
b.style.left=(d.x*a+(a>>1)-(b.offsetWidth>>1))+"px";
b.style.top=(d.y*a+a+Jui.theme["Workflow.NodeTextDistance"])+"px";
};
Jui.graph.Workflow.prototype._setLines=function(c){var e=this;
e._lines=[];
e._lineMap={};
e._nodeLineMap={};
var b=[];
for(var d=0;
d<c.length;
++d){b.push(e._getLineHtml(c[d]));
}var a=e._nodePanel;
Jui.dom.insertHtml(a,"BeforeEnd",b.join(""));
for(var d=0,f=c.length;
d<f;
++d){e._initializeLine(c[d],a.children[a.children.length-f+d]);
}e._refreshLines();
};
Jui.graph.Workflow.prototype._getLineHtml=function(a){return"<div class=JuiWorkflowLineText _code='"+a.code+"'>"+Jui.$h(a.text||"")+"</div>";
};
Jui.graph.Workflow.prototype._initializeLine=function(a,c){var b=this;
a.textElement=c;
c._code=c.getAttribute("_code");
c.onmousedown=Jui.graph.Workflow.doLineTextMouseDown;
c.ondblclick=Jui.graph.Workflow.doLineTextDoubleClick;
b._caculateLinePoints(a,a.routes||[]);
b._lines.push(a);
b._nodeLineMap[[a.from,a.to]]=a;
b._lineMap[a.code]=a;
};
Jui.graph.Workflow.prototype._refreshLines=function(){var k=this;
var e=k._lineCanvas;
var o=k._getCanvasSize(k._nodes,k._lines);
var d=e.getContext("2d");
k._setCanvasSize(e,o.width,o.height);
d.clearRect(0,0,e.width,e.height);
for(var h=0;
h<k._lines.length;
++h){var q=k._lines[h];
var j={isDefault:q.isDefault,isBold:q==k._currentLine};
if(!k._isDesignMode){j.isDash=q.status==null;
j.color=q.status==null?null:q.status=="Ready"?"#0060F0":"#F08020";
}k._drawLine(d,q.points,j);
k._refreshLintTextPosition(q);
}var a=k._nodePanel.getElementsByClassName("JuiWorkflowLineDragger");
for(var h=a.length-1;
h>=0;
--h){Jui.dom.removeElement(a[h]);
}if(k._currentLine!=null){var g=[];
var f=Jui.theme["Workflow.LineDraggerWidth"]>>1;
for(var h=0,n=k._currentLine.points;
h<n.length;
++h){var c=n[h];
if(h>0){var m=(n[h-1].x+c.x)>>1;
var l=(n[h-1].y+c.y)>>1;
g.push("<div class=JuiWorkflowLineDragger draggable=true");
g.push(" style='left:"+(m-f)+"px;top:"+(l-f)+"px'></div>");
}g.push("<div class=JuiWorkflowLineDragger draggable=true");
g.push(" style='left:"+(c.x-f)+"px;top:"+(c.y-f)+"px'></div>");
}Jui.dom.insertHtml(k._nodePanel,"BeforeEnd",g.join(""));
var a=k._nodePanel.getElementsByClassName("JuiWorkflowLineDragger");
for(var h=a.length-1;
h>=0;
--h){var b=a[h];
b._index=h;
b.ondragstart=Jui.graph.Workflow.doLineDragStart;
b.ondragend=Jui.graph.Workflow.doLineDragEnd;
b.ondblclick=Jui.graph.Workflow.doLineDraggerDoubleClick;
}}};
Jui.graph.Workflow.prototype._showTempCanvas=function(){this._tempCanvas.style.display="block";
};
Jui.graph.Workflow.prototype._hideTempCanvas=function(){var a=this._tempCanvas;
a.getContext("2d").clearRect(0,0,a.width,a.height);
a.style.display="none";
};
Jui.graph.Workflow.prototype._drawTempLine=function(g,c){var f=0;
var a=0;
for(var e=0;
e<g.length;
++e){f=Math.max(f,g[e].x);
a=Math.max(a,g[e].y);
}var h=this;
var b=h._tempCanvas;
var d=b.getContext("2d");
h._setCanvasSize(b,f+10,a+10);
d.clearRect(0,0,b.width,b.height);
h._drawLine(d,g,{bold:c,isDash:true,hasArrow:false});
};
var xxx=0;
Jui.graph.Workflow.prototype._drawLine=function(d,q,h){var t=h.isDefault;
var n=h.isBold;
var k=h.isDash;
var m=h.hasArrow!=false;
var o=k?"#999999":h.color||"#000000";
d.beginPath();
d.strokeStyle=o;
d.lineWidth=n?2:1;
if(d.setLineDash){d.setLineDash([0,0]);
}if(t){q=Jui.util.clone(q);
var j=Jui.math.getPointPointSlope(q[0],q[1]);
var l=3.5;
var x=q[0];
var w=q[1];
q[0]={x:x.x+l*Math.cos(j),y:x.y+l*Math.sin(j)};
if(!n&&(x.x==w.x||x.y==w.y)){x=x.x==w.x?{x:x.x-0.5,y:x.y}:{x:x.x,y:x.y-0.5};
}d.arc(x.x,x.y,3.5,0,Math.PI*2);
d.stroke();
}if(m){var g=q[q.length-2];
var f=q[q.length-1];
if(!n&&g.x==f.x){g=new Jui.graph.Workflow.Point(g.x-0.5,g.y);
f=new Jui.graph.Workflow.Point(f.x-0.5,f.y);
}else{if(!n&&g.y==f.y){g=new Jui.graph.Workflow.Point(g.x,g.y-0.5);
f=new Jui.graph.Workflow.Point(f.x,f.y-0.5);
}}var v=Jui.math.getPointPointSlope(f,g);
var z=v-Jui.theme["Workflow.ArrowAngle"]/2;
var y=v+Jui.theme["Workflow.ArrowAngle"]/2;
var u=f.x+Jui.theme["Workflow.ArrowSize"]*Math.cos(z);
var e=f.y+Jui.theme["Workflow.ArrowSize"]*Math.sin(z);
var s=f.x+Jui.theme["Workflow.ArrowSize"]*Math.cos(y);
var c=f.y+Jui.theme["Workflow.ArrowSize"]*Math.sin(y);
d.moveTo(u,e);
d.lineTo(f.x,f.y);
d.lineTo(s,c);
d.stroke();
}if(k&&d.setLineDash){d.setLineDash([7,3]);
}d.moveTo(q[0].x,q[0].y);
for(var p=1;
p<q.length;
++p){var x=q[p-1],w=q[p];
if(!n&&x.x==w.x){d.lineTo(x.x-0.5,x.y);
d.lineTo(w.x-0.5,w.y);
}else{if(!n&&x.y==w.y){d.lineTo(x.x,x.y-0.5);
d.lineTo(w.x,w.y-0.5);
}else{d.lineTo(w.x,w.y);
}}}d.stroke();
d.closePath();
};
Jui.graph.Workflow.prototype._refreshLintTextPosition=function(a){var b=a.points[a.points.length>>1];
if(a.points.length%2==0){var c=a.points[(a.points.length>>1)-1];
b={x:(c.x+b.x)/2,y:(c.y+b.y)/2};
}a.textElement.style.left=((b.x-(a.textElement.offsetWidth>>1))||0)+"px";
a.textElement.style.top=((b.y-(a.textElement.offsetHeight>>1))||0)+"px";
};
Jui.graph.Workflow.prototype._setCurrentLegendItem=function(c){var b=this;
c=c||b._cursorLegendItem;
if(b._isDesignMode&&c!=b._currentLegendItem){if(b._currentLegendItem!=null){b._currentLegendItem.className="";
}c.className="JuiWorkflowLegendItemCurrent";
var a=c.getAttribute("_type");
b._currentLegendItem=c;
b._mask.style.display=a=="Select"?"none":"block";
b._mask.style.cursor=a=="Select"?"":"copy";
}b._hideTempCanvas();
};
Jui.graph.Workflow.prototype._setCurrentNode=function(b){var a=this;
if(a._currentNode!=b){if(a._currentNode!=null){a._currentNode.element.removeAttribute("selected");
}if(b!=null){b.element.setAttribute("selected",true);
}a._currentNode=b;
}};
Jui.graph.Workflow.prototype._setCurrentLine=function(a){var b=this;
if(b._currentLine!=a){b._currentLine=a;
b._refreshLines();
}};
Jui.graph.Workflow.prototype._hideMask=function(){this._mask.style.display="none";
this._mask.style.cursor="";
};
Jui.graph.Workflow.prototype._setCanvasSize=function(b,c,a){b.style.width=c+"px";
b.style.height=a+"px";
b.width=c;
b.height=a;
};
Jui.graph.Workflow.prototype._getNodeJson=function(a){return{code:a.code,text:a.text,type:a.type,x:a.x,y:a.y};
};
Jui.graph.Workflow.prototype._getLineJson=function(a){var b={code:a.code,from:a.from,to:a.to};
if(a.isDefault){b.isDefault=true;
}if(!Jui.string.isEmpty(a.text)){b.text=a.text;
}if(!Jui.array.isEmpty(a.routes)){b.routes=a.routes;
}return b;
};
Jui.graph.Workflow.prototype._caculateLinePoints=function(m,q){var E=this;
var t=E._nodeMap[m.from];
var f=E._nodeMap[m.to];
if(t==null||f==null){Jui.util.alertAndThrow("line '"+m.code+"': start node or end node not found");
}var v=[];
v.push(E._getNodeCenterPoint(t));
for(var w=0;
w<q.length;
++w){var s=q[w];
v.push(new Jui.graph.Workflow.Point(s.x,s.y));
}v.push(E._getNodeCenterPoint(f));
var n=16;
var l=0.2;
outer:for(;
;
){for(var u=1;
u<v.length-1;
++u){var C=v[u-1],B=v[u],A=v[u+1];
if(Jui.math.getPointPointDistance(C,A)<n||Jui.math.getPointLineDistance(B,C,A)<n){v.splice(u,1);
continue outer;
}if(B.x!=C.x&&B.x!=A.x&&B.y!=C.y&&Math.abs(B.x-C.x)<n&&Math.abs((B.x-C.x)/(B.y-C.y))<l){B.set(C.x,B.y+(C.x-B.x)*(B.y-A.y)/(B.x-A.x));
continue outer;
}if(B.x!=C.x&&B.x!=A.x&&B.y!=A.y&&Math.abs(B.x-A.x)<n&&Math.abs((B.x-A.x)/(B.y-A.y))<l){B.set(A.x,B.y+(A.x-B.x)*(B.y-C.y)/(B.x-C.x));
continue outer;
}if(B.y!=C.y&&B.y!=A.y&&B.x!=C.x&&Math.abs(B.y-C.y)<n&&Math.abs((B.y-C.y)/(B.x-C.x))<l){B.set(B.x+(C.y-B.y)*(B.x-A.x)/(B.y-A.y),C.y);
continue outer;
}if(B.y!=C.y&&B.y!=A.y&&B.x!=A.x&&Math.abs(B.y-A.y)<n&&Math.abs((B.y-A.y)/(B.x-A.x))<l){B.set(B.x+(A.y-B.y)*(B.x-C.x)/(B.y-C.y),A.y);
continue outer;
}}break;
}if(v.length==2){var g=E._nodeLineMap[[f.code,t.code]];
var e=g!=null&&g.points.length==2;
if(!e){for(var w=0;
w<E._nodes.length;
++w){var r=E._nodes[w];
if(r.code!=m.from&&r.code!=m.to){var o=E._getNodeCenterPoint(r);
if(Jui.math.getPointLineSegmentDistance(o,v[0],v[1])==0){e=true;
break;
}}}}if(e){var C=v[0];
var B=v[1];
var z=Jui.math.getPointPointDistance(C,B);
var k=(C.x+B.x)/2+40*(C.y-B.y)/z;
var h=(C.y+B.y)/2+40*(B.x-C.x)/z;
v=[].concat(C,new Jui.graph.Workflow.Point(k,h),B);
}}m.points=v;
m.routes=v.slice(1,-1);
E._refreshLineEndPoints(m);
};
Jui.graph.Workflow.prototype._refreshLineEndPoints=function(m){var j=this._nodeMap[m.from];
var k=this._nodeMap[m.to];
var g=Jui.theme["Workflow.GridSize"];
var f=g>>1;
var l=m.points;
var e=l.length;
l[0]=new Jui.graph.Workflow.Point(j.x*g+f,j.y*g+f);
if(k!=null){l[e-1]=new Jui.graph.Workflow.Point(k.x*g+f,k.y*g+f);
}var c=Jui.math.getPointPointDistance(l[0],l[1]);
var a=Jui.math.getPointPointDistance(l[e-2],l[e-1]);
var d=l[0].x+Math.round(g*0.5*(l[1].x-l[0].x)/c);
var i=l[0].y+Math.round(g*0.5*(l[1].y-l[0].y)/c);
var b=l[e-1].x+Math.round(f*(l[e-2].x-l[e-1].x)/a);
var h=l[e-1].y+Math.round(f*(l[e-2].y-l[e-1].y)/a);
if(c>0){l[0]=new Jui.graph.Workflow.Point(d,i);
}if(k!=null&&a>0){l[e-1]=new Jui.graph.Workflow.Point(b,h);
}};
Jui.graph.Workflow.prototype._deleteNode=function(d){var c=this;
for(var b=c._lines.length-1;
b>=0;
--b){var a=c._lines[b];
if(c._nodeMap[a.from]==d||c._nodeMap[a.to]==d){c._deleteLine(a);
}}for(var b=0;
b<c._nodes.length;
++b){if(c._nodes[b]==d){c._nodes.splice(b,1);
break;
}}delete c._nodeMap[d.code];
delete c._pointNodeMap[[d.x,d.y]];
Jui.dom.removeElement(d.textElement);
Jui.dom.removeElement(d.element);
if(d==c._currentNode){c._currentNode=null;
}c.fireEvent("onnodedelete",{node:c._getNodeJson(d)});
};
Jui.graph.Workflow.prototype._deleteLine=function(a){var c=this;
for(var b=0;
b<c._lines.length;
++b){if(c._lines[b]==a){c._lines.splice(b,1);
break;
}}delete c._lineMap[a.code];
delete c._nodeLineMap[[a.from,a.to]];
Jui.dom.removeElement(a.textElement);
if(a==c._currentLine){c._currentLine=null;
}c._refreshLines();
c.fireEvent("onlinedelete",{line:c._getLineJson(a)});
};
Jui.graph.Workflow.prototype._deleteCurrentElement=function(){var a=this;
if(a._currentLine!=null){a._deleteLine(a._currentLine);
}if(a._currentNode!=null){a._deleteNode(a._currentNode);
}};
Jui.graph.Workflow.Point=function(a,b){this.x=a;
this.y=b;
};
Jui.graph.Workflow.Point.prototype.set=function(a,b){this.x=a;
this.y=b;
};
Jui.graph.Workflow.Point.prototype.toString=function(){return[this.x,this.y].toString();
};
